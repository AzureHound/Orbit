# esc
input.prepend_keymap = [
  { on = "<Esc>", run = "close", desc = "Cancel input" },
]

mgr.prepend_keymap = [
  # shell
  { on = [ "!" ], run = 'shell "$SHELL" --block', desc = "Open shell here" },

  # cursor movement
  { on = "K", run = "arrow -50%", desc = "Move cursor up half page" },
  { on = "J", run = "arrow 50%", desc = "Move cursor down half page" },
  { on = "<A-k>", run = "arrow -5", desc = "Move cursor up half page" },
  { on = "<A-j>", run = "arrow 5", desc = "Move cursor down half page" },

  # file finding
  { on = [ "f", "g" ], run = "plugin fg", desc = "find file by content (fuzzy match)" },
  { on = [ "f", "f" ], run = "filter --smart", desc = "Filter files" },

  # gvfs
  { on = [ "M", "m" ], run = "plugin gvfs -- select-then-mount", desc = "Select device then mount" },
  { on = [ "M", "m" ], run = "plugin gvfs -- select-then-mount --jump", desc = "Select device to mount and jump to its mount point" },
  { on = [ "M", "R" ], run = "plugin gvfs -- remount-current-cwd-device", desc = "Remount device under cwd" },
  { on = [ "M", "u" ], run = "plugin gvfs -- select-then-unmount", desc = "Select device then unmount" },
  { on = [ "M", "u" ], run = "plugin gvfs -- select-then-unmount --eject", desc = "Select device then eject" },
  { on = [ "M", "U" ], run = "plugin gvfs -- select-then-unmount --eject --force", desc = "Select device then force to eject/unmount" },

  { on = [ "M", "a" ], run = "plugin gvfs -- add-mount", desc = "Add a GVFS mount URI" },
  { on = [ "M", "e" ], run = "plugin gvfs -- edit-mount", desc = "Edit a GVFS mount URI" },
  { on = [ "M", "r" ], run = "plugin gvfs -- remove-mount", desc = "Remove a GVFS mount URI" },

  { on = [ "g", "m" ], run = "plugin gvfs -- jump-to-device", desc = "Select device then jump to its mount point" },
  { on = [ "`", "`" ], run = "plugin gvfs -- jump-back-prev-cwd", desc = "Jump back to the position before jumped to device" },

  # search & navigation
  { on = [ "S" ], run = "plugin searchjump --autocd", desc = "Flash" },

  # clipboard
  { on = [ "<C-y>" ], run = 'shell -- for path in "$@"; do echo "file://$path"; done | wl-copy -t text/uri-list', desc = "Copy to clipboard" },

  # create directory
  { on = "A", run = "create --dir", desc = "Create a dir" },

  # git navigation
  { on = [ "g", "r" ], run = 'shell -- ya emit cd "$(git rev-parse --show-toplevel)"', desc = "Root of Git Repo" },

  # tab management
  { on = "H", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = "L", run = "tab_switch 1 --relative", desc = "Switch to the next tab" },
  { on = "<", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
  { on = ">", run = "tab_swap 1", desc = "Swap current tab with next tab" },

  # diff
  { on = "<C-d>", run = "plugin diff", desc = "Diff the selected with the hovered file" },

  # compress
  { on = [ "c", "a" ], run = "plugin compress", desc = "Archive selected files" },

  # convert
  { on = ["c", "p"], run = "plugin convert -- --extension='png'", desc = "Convert selected files to PNG" },
  { on = ["c", "j"], run = "plugin convert -- --extension='jpg'", desc = "Convert selected files to JPG" },
  { on = ["c", "w"], run = "plugin convert -- --extension='webp'", desc = "Convert selected files to WebP" },

  # lazygit
  { on = [ "g", "i" ], run = "plugin lazygit", desc = "run lazygit" },

  # mount
  { on = "M", run = "plugin mount" },

  # preview
  { on = "<C-u>", run = "seek -5", desc = "Seek up 5 units in the preview" },
  { on = "<C-d>", run = "seek 5", desc = "Seek down 5 units in the preview" },

  # ripgrep
  { on = [ "f","g" ], run = "plugin fg", desc = "find file by content (fuzzy match)" },
  { on = [ "f","G" ], run = "plugin fg --args='rg'", desc = "find file by content (ripgrep match)" },
  { on = [ "f","f" ], run = "plugin fg --args='fzf'", desc = "find file by filename" },

  # rsync
  { on = [ "R" ], run = "plugin rsync --args='user@server.com'", desc = "Copy files using rsync" },

  # searchjump
  { on = [ "i" ], run = "plugin searchjump --autocd", desc = "searchjump mode" },

  # smart-filter
  { on = "F", run = "plugin smart-filter", desc = "Smart filter" },

  # toggle-pane
  # { on = "T", run = "plugin toggle-pane min-preview", desc = "Show or hide the preview pane" },
  { on = "T", run = "plugin toggle-pane max-preview", desc = "Maximize or restore the preview pane" },
]

# completion navigation
completion.prepend_keymap = [
  { on = "<C-k>", run = "arrow -1", desc = "Move cursor up" },
  { on = "<C-j>", run = "arrow 1", desc = "Move cursor down" },
]

# eza
prepend_keymap = [
  { on = [ "E" ], run = "plugin eza-preview", desc = "Toggle tree/list dir preview" },
  { on = [ "-" ], run = "plugin eza-preview inc-level", desc = "Increment tree level" },
  { on = [ "_" ], run = "plugin eza-preview dec-level", desc = "Decrement tree level" },
  { on = [ "$" ], run = "plugin eza-preview toggle-follow-symlinks", desc = "Toggle tree follow symlinks" },
  { on = [ "*" ], run = "plugin eza-preview toggle-hidden", desc = "Toggle hidden files" },
]

# open files
mgr.append_keymap = [
  { on = [ "e" ], run = "open", desc = "Open the selected files" },
  { on = [ "E" ], run = "open --interactive", desc = "Open the selected files interactively" },
]
