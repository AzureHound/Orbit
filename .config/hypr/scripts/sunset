#!/usr/bin/env bash

# Hypr sunset daemon - adjusts screen temperature throughout the day
# Temperature settings in Kelvin (lower=warmer/orange, higher=cooler/blue)
TEMP_00_00=2700
TEMP_00_30=2700
TEMP_01_00=2700
TEMP_01_30=2800
TEMP_02_00=2800
TEMP_02_30=2800
TEMP_03_00=2900
TEMP_03_30=3000
TEMP_04_00=3200
TEMP_04_30=3400
TEMP_05_00=3600
TEMP_05_30=4000
TEMP_06_00=4200
TEMP_06_30=4600
TEMP_07_00=5000
TEMP_07_30=5400
TEMP_08_00=5700
TEMP_08_30=6000
TEMP_09_00=6300
TEMP_09_30=6500
TEMP_10_00=6500
TEMP_10_30=6400
TEMP_11_00=6500
TEMP_11_30=6600
TEMP_12_00=6600
TEMP_12_30=6500
TEMP_13_00=6400
TEMP_13_30=6300
TEMP_14_00=6200
TEMP_14_30=6100
TEMP_15_00=6000
TEMP_15_30=5800
TEMP_16_00=5600
TEMP_16_30=5300
TEMP_17_00=4900
TEMP_17_30=4500
TEMP_18_00=4200
TEMP_18_30=3900
TEMP_19_00=3600
TEMP_19_30=3400
TEMP_20_00=3200
TEMP_20_30=3000
TEMP_21_00=2900
TEMP_21_30=2800
TEMP_22_00=2800
TEMP_22_30=2700
TEMP_23_00=2700
TEMP_23_30=2700

# Reset temperature on exit
cleanup() {
  hyprctl hyprsunset temperature 6500 2>/dev/null
  exit 0
}

trap cleanup SIGINT SIGTERM

# Calculate seconds until next 30-min interval
calculate_next_check() {
  current_minute=$(date +%M)
  current_second=$(date +%S)

  if [ $current_minute -lt 30 ]; then
    echo $(((30 - current_minute) * 60 - current_second))
  else
    echo $(((60 - current_minute) * 60 - current_second))
  fi
}

# Set temperature based on time
update_temperature() {
  current_hour=$(date +%H)
  current_minute=$(date +%M)
  hour_key="$current_hour"
  minute_key=$([ $current_minute -lt 30 ] && echo "00" || echo "30")

  var_name="TEMP_${hour_key}_${minute_key}"
  temp_value=${!var_name:-6500} # Default to 6500K if not defined

  hyprctl hyprsunset temperature $temp_value 2>/dev/null || exit 1
}

# Check for required command
command -v hyprctl >/dev/null 2>&1 || exit 1

# Main loop
while true; do
  update_temperature
  sleep_time=$(calculate_next_check)
  [ "$sleep_time" -lt 1 ] && sleep_time=1
  sleep $sleep_time
done
