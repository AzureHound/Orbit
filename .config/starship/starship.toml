# 🚀 starship!!

format = """
$os\
$directory\
${custom.giturl}\
$git_branch\
$git_status\
${custom.docker}\
${custom.hypr}\
${custom.neovim}\
$sudo\
$shell\
$fill\
$aws\
$c\
$docker_context\
$golang\
$java\
$jobs\
$kotlin\
$lua\
$nix_shell\
$nodejs\
$python\
$package\
$ruby\
$rust\
$swift\
$cmd_duration\
$line_break\
$character"""

# right_format = """$time"""

add_newline = false
palette = 'catppuccin' # catppuccin, nord, onedark
scan_timeout = 30
command_timeout = 5000

[os]
format = '[$symbol]($style) '
disabled = false

[os.symbols]
Alpine = "[ ](fg:blue)"
Amazon = "[ ](fg:yellow)"
Android = "[ ](fg:green)"
Arch = "[󰣇](fg:blue)"
Debian = "[󰣚](fg:#d70a53)"
Ubuntu = "[](fg:#E95420)"
Macos = "[](fg:white)"
Windows = "[󰍲](fg:#0078d7)"
SUSE = "[](fg:#73ba25)"
Redhat = "[󱄛](fg:#ee0000)"
Raspbian = "[󰐿](fg:#C51A4A)"

[username]
show_always = true
style_user = "fg:text"
style_root = "fg:text"
format = '[ $user ]($style)'

[directory]
style = 'fg:subtext0'
format = '[$path ]($style)[$read_only]($read_only_style)'
truncation_length = 8
truncation_symbol = '…/'
fish_style_pwd_dir_length = 1
truncate_to_repo = false
read_only_style = '197'
read_only = '󰌾 '

[directory.substitutions]
"Desktop" = "Desktop  "
"Documents" = "Documents 󰈙"
"Downloads" = "Downloads  "
"Music" = "Music 󰎋"
"Pictures" = "Pictures  "
"Developer" = "Developer 󰲋 "
"/tmp" = "/tmp  "

[sudo]
style = 'bold blue'
symbol = '💀'
format = '[$symbol]($style)'
disabled = false

[shell]
fish_indicator = '󰈺 '
style = 'cyan bold'
disabled = true

[fill]
symbol = ' '

[cmd_duration]
min_time = 100
style = 'fg:yellow'
format = ' [$duration]($style)'

[character]
success_symbol = '[](green_bold)'
error_symbol = '[](bold red)'
vimcmd_symbol = '[](green)'

# Custom entries
[custom.docker]
files = [
  "Dockerfile",
  "compose.yml",
  "docker-compose.yml",
  "docker-compose.yaml",
]
style = "bold blue"
format = "[ ]($style)"

[custom.giturl]
disabled = false
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "aur" ]]; then
    GIT_REMOTE_SYMBOL="󰣇 "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL="󰊢 "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL"
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash", "--noprofile", "--norc"]
format = "$output  "

[custom.hypr]
style = "blue"
format = "[ ]($style)"
detect_files = ["hyprland.conf"]

[custom.neovim]
command = 'bob ls | rg Used | awk "{print \$2}"'
detect_folders = ["lua"]
style = "green"
format = "[ $output ]($style)"
shell = ["bash"]

[aws]
symbol = ' '
style = 'yellow'
format = '[$symbol($profile )(\[$duration\] )]($style)'

[c]
symbol = " "
style = "teal"
format = '[$symbol($profile )(\[$duration\] )]($style)'

[deno]
symbol = ' '
style = 'green'
format = '[$symbol($profile )(\[$duration\] )]($style)'

[docker_context]
symbol = ' '
style = 'fg:sapphire'
format = '[$symbol]($style) $path'
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']
detect_extensions = ['Dockerfile']

[git_branch]
style = 'fg:green_bold'
symbol = ' '
format = '[$symbol$branch ]($style)'

[git_status]
format = '([$conflicted$ahead_behind$diverged$staged$stashed$renamed$modified$untracked$deleted$up_to_date]($style) )'
conflicted = '=${count}'
ahead = '↑${count}'
behind = '↓${count}'
diverged = ' ↑${ahead_count}↓${behind_count}'
untracked = '?${count}'
stashed = '●${count}'
modified = '!${count}'
renamed = '>${count}'
up_to_date = '[](green) '
staged = "${count}"
deleted = "✘${count}"
style = 'fg:red'

[golang]
symbol = ' '
style = 'blue'
format = '[${symbol}(${version})]($style)'

[java]
symbol = ""
style = "yellow"
format = '[$symbol($profile )(\[$duration\] )]($style)'

[jobs]
symbol = ' '
style = 'red'
number_threshold = 1
format = '[$symbol]($style)'

[kotlin]
symbol = " "
style = 'blue'
format = '[${symbol}(${version})]($style)'

[lua]
symbol = ' '
style = 'blue'
format = '[${symbol}(${version})]($style)'

[nix_shell]
symbol = " "
style = 'blue'
format = '[${symbol}(${version})]($style)'

[nodejs]
symbol = ' '
style = 'green'
format = '[${symbol}(${version})]($style)'

[package]
symbol = '󰏗 '
format = ' [${symbol}(${version})]($style)'

[python]
symbol = ' '
style = 'teal'
format = '[${symbol}(${version}) ($virtualenv)]($style)'

[ruby]
symbol = ' '
style = 'red'
format = '[${symbol}(${version})]($style)'

[rust]
symbol = ' '
style = 'peach'
format = '[${symbol}(${version})]($style)'

[swift]
symbol = ' '
style = 'peach'
format = '[${symbol}(${version})]($style)'

[time]
disabled = false
style = "cyan"
format = '[$time]($style)'
time_format = "%T"
# utc_time_offset = "-5"
# time_range = "10:00:00-14:00:00"

# Themes
[palettes.catppuccin]
rosewater = "#f4dbd6"
flamingo = "#f0c6c6"
pink = "#f5bde6"
mauve = "#c6a0f6"
red = "#ed8796"
maroon = "#ee99a0"
peach = "#f5a97f"
yellow = "#eed49f"
green = "#a6da95"
green_bold = "#0DFF82"
teal = "#8bd5ca"
sky = "#91d7e3"
sapphire = "#7dc4e4"
blue = "#8aadf4"
lavender = "#b7bdf8"
text = "#cad3f5"
subtext1 = "#b8c0e0"
subtext0 = "#a5adcb"
overlay2 = "#939ab7"
overlay1 = "#8087a2"
overlay0 = "#6e738d"
surface2 = "#5b6078"
surface1 = "#494d64"
surface0 = "#363a4f"
base = "#24273a"
mantle = "#1e2030"
crust = "#181926"

[palettes.nord]
dark_blue = '#5E81AC'
blue = '#81A1C1'
teal = '#88C0D0'
red = '#BF616A'
orange = '#D08770'
green = '#A3BE8C'
yellow = '#EBCB8B'
purple = '#B48EAD'
gray = '#434C5E'
black = '#2E3440'
white = '#D8DEE9'

[palettes.onedark]
dark_blue = '#61afef'
blue = '#56b6c2'
red = '#e06c75'
green = '#98c379'
purple = '#c678dd'
cyan = '#56b6c2'
orange = '#be5046'
yellow = '#e5c07b'
gray = '#828997'
white = '#abb2bf'
black = '#2c323c'
